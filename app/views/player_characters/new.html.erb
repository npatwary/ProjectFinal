<h1>New Character</h1>

<%= render 'create_form' %>

<%= link_to 'View Characters', player_characters_path, class: "btn btn-default" %>

<script type="text/javascript" charset="utf-8">
  
  $(document).ready(function(){
  $("#new_player_character").submit(function(){
      //alert($('#race_Strength').text())
      //alert("here");

      //update ability scores before sending post request
      var strength_score = parseInt($('#player_character_ability_scores_attributes_0_score').val()) + parseInt($('#race_Strength').text());
      var dexterity_score = parseInt($('#player_character_ability_scores_attributes_1_score').val()) + parseInt($('#race_Dexterity').text());
      var constitution_score = parseInt($('#player_character_ability_scores_attributes_2_score').val()) + parseInt($('#race_Constitution').text());
      var intelligence_score = parseInt($('#player_character_ability_scores_attributes_3_score').val()) + parseInt($('#race_Intelligence').text());
      var wisdom_score = parseInt($('#player_character_ability_scores_attributes_4_score').val()) + parseInt($('#race_Wisdom').text());
      var charisma_score = parseInt($('#player_character_ability_scores_attributes_5_score').val()) + parseInt($('#race_Charisma').text());

      $('#player_character_ability_scores_attributes_0_score').val(strength_score);
      $('#player_character_ability_scores_attributes_1_score').val(dexterity_score);
      $('#player_character_ability_scores_attributes_2_score').val(constitution_score);
      $('#player_character_ability_scores_attributes_3_score').val(intelligence_score);
      $('#player_character_ability_scores_attributes_4_score').val(wisdom_score);
      $('#player_character_ability_scores_attributes_5_score').val(charisma_score);

      //return false;
    });

    //add on change event for ability scores
    $('.ability_score').change(function(){
        updateAllFieldsRelatedWithAbilityScores();
    });

  });

  function autoPopulateRaceRelatedFields(data){
  	console.log("ajax race post successful!")
  	console.log(data)
  	console.log(data['max_age'])

  	//auto populate html controls
  	$('#player_character_speed').val(data['base_speed'])

    var alignment = "";
  	if(data['alignment'] != null){
      alignment = data['alignment'];
    }
  	
    $('#player_character_alignment').val(alignment);
  	

  	$('#player_character_featuresAndTraits').val(data['features'])

  	var otherProficienciesAndLanguages = data['language'] + '\n'
    if(data['tools'] != null){
      otherProficienciesAndLanguages = otherProficienciesAndLanguages + data['tools'];
    }
  	$('#player_character_otherProficienciesAndLanguages').val(otherProficienciesAndLanguages);

    //set racial increase of ability scores
    $('#race_Strength').text(data['strength']);
    $('#race_Dexterity').text(data['dexterity']);
    $('#race_Constitution').text(data['constitution']);
    $('#race_Intelligence').text(data['intelligence']);
    $('#race_Wisdom').text(data['wisdom']);
    $('#race_Charisma').text(data['charisma']);

    updateAllFieldsRelatedWithAbilityScores();

  }

  function updateAllFieldsRelatedWithAbilityScores(){
    //final ability score = ability score + ability_score_racial_increase + ability_score_class_increase
    var strength_score = parseInt($('#player_character_ability_scores_attributes_0_score').val()) + parseInt($('#race_Strength').text());
    var dexterity_score = parseInt($('#player_character_ability_scores_attributes_1_score').val()) + parseInt($('#race_Dexterity').text());
    var constitution_score = parseInt($('#player_character_ability_scores_attributes_2_score').val()) + parseInt($('#race_Constitution').text());
    var intelligence_score = parseInt($('#player_character_ability_scores_attributes_3_score').val()) + parseInt($('#race_Intelligence').text());
    var wisdom_score = parseInt($('#player_character_ability_scores_attributes_4_score').val()) + parseInt($('#race_Wisdom').text());
    var charisma_score = parseInt($('#player_character_ability_scores_attributes_5_score').val()) + parseInt($('#race_Charisma').text());

      console.log(strength_score);
      console.log(dexterity_score);

    //update score modifiers
      updateScoreModifiers(strength_score,dexterity_score,constitution_score,intelligence_score,wisdom_score,charisma_score);
      updateSavingThrows(strength_score,dexterity_score,constitution_score,intelligence_score,wisdom_score,charisma_score);
      updateSkills(strength_score,dexterity_score,constitution_score,intelligence_score,wisdom_score,charisma_score);
  }

  function updateScoreModifiers(strength_score,dexterity_score,constitution_score,intelligence_score,wisdom_score,charisma_score){
      

      $('#player_character_ability_scores_attributes_0_modifier').val(getScoreModifier(strength_score));
      $('#player_character_ability_scores_attributes_1_modifier').val(getScoreModifier(dexterity_score));
      $('#player_character_ability_scores_attributes_2_modifier').val(getScoreModifier(constitution_score));
      $('#player_character_ability_scores_attributes_3_modifier').val(getScoreModifier(intelligence_score));
      $('#player_character_ability_scores_attributes_4_modifier').val(getScoreModifier(wisdom_score));
      $('#player_character_ability_scores_attributes_5_modifier').val(getScoreModifier(charisma_score));
  }

  function updateSavingThrows(strength_score,dexterity_score,constitution_score,intelligence_score,wisdom_score,charisma_score){

      $('#player_character_saving_throws_attributes_0_modifier').val(getScoreModifier(strength_score));
      $('#player_character_saving_throws_attributes_1_modifier').val(getScoreModifier(dexterity_score));
      $('#player_character_saving_throws_attributes_2_modifier').val(getScoreModifier(constitution_score));
      $('#player_character_saving_throws_attributes_3_modifier').val(getScoreModifier(intelligence_score));
      $('#player_character_saving_throws_attributes_4_modifier').val(getScoreModifier(wisdom_score));
      $('#player_character_saving_throws_attributes_5_modifier').val(getScoreModifier(charisma_score));
  }

  function updateSkills(strength_score,dexterity_score,constitution_score,intelligence_score,wisdom_score,charisma_score){

      $('#player_character_skills_attributes_0_modifier').val(getScoreModifier(dexterity_score));//acrobatics
      $('#player_character_skills_attributes_1_modifier').val(getScoreModifier(wisdom_score));//animal handling
      $('#player_character_skills_attributes_2_modifier').val(getScoreModifier(intelligence_score));//arcana
      $('#player_character_skills_attributes_3_modifier').val(getScoreModifier(strength_score));//athletics
      $('#player_character_skills_attributes_4_modifier').val(getScoreModifier(charisma_score));//deception
      $('#player_character_skills_attributes_5_modifier').val(getScoreModifier(intelligence_score));//history

      $('#player_character_skills_attributes_6_modifier').val(getScoreModifier(wisdom_score));//insight
      $('#player_character_skills_attributes_7_modifier').val(getScoreModifier(charisma_score));//intimidation
      $('#player_character_skills_attributes_8_modifier').val(getScoreModifier(intelligence_score));//investigation
      $('#player_character_skills_attributes_9_modifier').val(getScoreModifier(wisdom_score));//medicine
      $('#player_character_skills_attributes_10_modifier').val(getScoreModifier(intelligence_score));//nature
      $('#player_character_skills_attributes_11_modifier').val(getScoreModifier(wisdom_score));//perception

      $('#player_character_skills_attributes_12_modifier').val(getScoreModifier(charisma_score));//performance
      $('#player_character_skills_attributes_13_modifier').val(getScoreModifier(charisma_score));//persuasion
      $('#player_character_skills_attributes_14_modifier').val(getScoreModifier(intelligence_score));//religion
      $('#player_character_skills_attributes_15_modifier').val(getScoreModifier(dexterity_score));//sleight of hand
      $('#player_character_skills_attributes_16_modifier').val(getScoreModifier(dexterity_score));//stealth
      $('#player_character_skills_attributes_17_modifier').val(getScoreModifier(wisdom_score));//survival
  }

  function getScoreModifier(score){

    //subtract 10 from score
    var retValue = score - 10;
    //divide by 2 and round down
    retValue = retValue / 2;
    return Math.floor(retValue);

  }

  function raceSelectionHandler()
 {
 	
 	//alert($('#player_character_race').val());
 	selected_race_id = $('#player_character_race').val();
    if(selected_race_id == ""){
      //reset fields affected by race selection
      $('#player_character_speed').val("");
      $('#player_character_alignment').val("");
      $('#player_character_featuresAndTraits').val("");
      $('#player_character_otherProficienciesAndLanguages').val("");
      return;
    }
    	

    console.log("selected race is " + $('#player_character_race option:selected').text() + " with id: " + selected_race_id)
 	//alert($('#player_character_race option:selected').text());

   var request =  $.ajax({
    	type: "POST",
    	url: "/races/"+selected_race_id,
    	dataType: "json",
    	success: function(data, httpStatus, xmlHttpObj){
    		autoPopulateRaceRelatedFields(data);
        },
        error: function(xmlHttpObj, httpStatus,errMsg){
            console.log("Oops!!" + httpStatus + ":" + errMsg);
        }
    });
}

//** Background Javascript Methods **//
$("#player_character_background").change(function(){
  var background = this.options[this.selectedIndex].value;
	var request =  $.ajax({
    	type: "POST",
    	url: "/player_characters/ajaxwindow/"+background ,
    	dataType: "json",
    	success: function(data, httpStatus, xmlHttpObj){
        var personalityFieldIDList = ['#player_character_personalityTraits', '#player_character_ideals', '#player_character_bonds','#player_character_flaws'];
        var keysForPersonality = ['personalityTraits', 'ideals', 'bonds', 'flaws'];
        
        for (var i = 0, j = personalityFieldIDList.length; i < j; i++){
          $(personalityFieldIDList[i]).empty();
          $.each(data[keysForPersonality[i]], function( index, value) {
            $(personalityFieldIDList[i])
              .append($("<option></option>")
              .attr("value",value)
              .text(value)); 
          });
        }
    	},
    	error: function(xmlHttpObj, httpStatus,errMsg){
    		console.log("Oops!!" + httpStatus + ":" + errMsg);
    	}
    });
})
//** Background **//

</script>

